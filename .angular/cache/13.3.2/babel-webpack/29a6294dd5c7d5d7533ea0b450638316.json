{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../music-data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/common\";\n\nconst _c0 = function (a1) {\n  return [\"/album/\", a1];\n};\n\nfunction ArtistDiscographyComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-subtitle\");\n    i0.ɵɵtext(6, \"Album Title\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(7, \"img\", 3);\n    i0.ɵɵelementStart(8, \"strong\");\n    i0.ɵɵtext(9, \"Release Date: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵelementStart(13, \"strong\");\n    i0.ɵɵtext(14, \"Tracks: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const album_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"margin\", \"20px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"min-width\", \"200px\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(album_r1.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(12, _c0, album_r1.id))(\"src\", album_r1.images[0].url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 9, album_r1.release_date, \"shortDate\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", album_r1.total_tracks, \" \");\n  }\n}\n\nexport let ArtistDiscographyComponent = /*#__PURE__*/(() => {\n  class ArtistDiscographyComponent {\n    constructor(musicService, route) {\n      this.musicService = musicService;\n      this.route = route;\n    }\n\n    ngOnInit() {\n      this.routeSub = this.route.params.subscribe(data => {\n        this.artistSub = this.musicService.getArtistById(data.id).subscribe(artist => {\n          this.artist = artist;\n        });\n        this.albumsSub = this.musicService.getAlbumsByArtistId(data.id).subscribe(data => {\n          this.albums = data.items.filter((album, index, arr) => {\n            return index === arr.map(data => data.name).indexOf(album.name);\n          });\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      var _a, _b, _c;\n\n      (_a = this.artistSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n      (_b = this.albumsSub) === null || _b === void 0 ? void 0 : _b.unsubscribe();\n      (_c = this.routeSub) === null || _c === void 0 ? void 0 : _c.unsubscribe();\n    }\n\n  }\n\n  ArtistDiscographyComponent.ɵfac = function ArtistDiscographyComponent_Factory(t) {\n    return new (t || ArtistDiscographyComponent)(i0.ɵɵdirectiveInject(i1.MusicDataService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  ArtistDiscographyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ArtistDiscographyComponent,\n    selectors: [[\"app-artist-discography\"]],\n    decls: 17,\n    vars: 9,\n    consts: [[\"fxLayout\", \"row wrap\", \"fxLayout.xs\", \"column\"], [\"fxFlex\", \"\", 3, \"margin\", 4, \"ngFor\", \"ngForOf\"], [\"fxFlex\", \"\"], [\"routerLinkActive\", \"active\", \"mat-card-image\", \"\", \"alt\", \"album art\", 1, \"album-cover\", 3, \"routerLink\", \"src\"]],\n    template: function ArtistDiscographyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵtext(5, \" Click the \");\n        i0.ɵɵelementStart(6, \"strong\");\n        i0.ɵɵtext(7, \"album cover\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \" for more information \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\")(10, \"mat-card\")(11, \"br\")(12, \"br\");\n        i0.ɵɵelementStart(13, \"h1\");\n        i0.ɵɵtext(14, \"Full Discography\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 0);\n        i0.ɵɵtemplate(16, ArtistDiscographyComponent_div_16_Template, 16, 14, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.artist.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Full discography for \", ctx.artist.name, \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵstyleProp(\"background\", \"url(\" + ctx.artist.images[0].url + \") no-repeat center center\")(\"background-size\", \"cover\")(\"height\", \"450px\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.albums);\n      }\n    },\n    directives: [i3.MatCard, i4.DefaultLayoutDirective, i5.NgForOf, i4.DefaultFlexDirective, i3.MatCardHeader, i3.MatCardTitle, i3.MatCardSubtitle, i2.RouterLinkActive, i3.MatCardImage, i2.RouterLink],\n    pipes: [i5.DatePipe],\n    styles: [\"\"]\n  });\n  return ArtistDiscographyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}